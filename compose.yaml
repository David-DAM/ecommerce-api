version: "3.1"

services:
  #  ecommerce-api:
  #    build: ./
  #    ports:
  #      - "8080:8080"
  #    healthcheck:
  #      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
  #      interval: 30s
  #      timeout: 10s
  #      retries: 5
  #    depends_on:
  #      db:
  #        condition: service_healthy

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker-config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9090/-/healthy" ]
      interval: 10s
      timeout: 10s
      retries: 5

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3100/ready" ]
      interval: 10s
      timeout: 10s
      retries: 5

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./docker-config/tempo/tempo.yml:/etc/tempo.yml
    ports:
      - "3200:3200"   # tempo
      - "9411:9411"  # zipkin
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3200/metrics" ]
      interval: 10s
      timeout: 10s
      retries: 5

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./docker-config/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    ports:
      - "3000:3000"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/healthz" ]
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: [ "redis-server", "--save", "''", "--appendonly", "no" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 10s
      retries: 5

  postgres:
    image: pgvector/pgvector:pg17
    container_name: postgres_pgvector
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ecommerce
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root -d ecommerce" ]
      interval: 10s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
  postgres_data:
